spring:
  datasource:
    username: ${DB_USERNAME:admin}
    url: jdbc:postgresql://${DB_URL:localhost:15432/pubdb?charSet=UTF-8}
    password: ${DB_PASSWORD:admin}
    tomcat:
      connection-properties: useUnicode=true;characterEncoding=utf8
    sql-script-encoding: 'UTF-8'
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'false'
    open-in-view: true
    hibernate:
      ddl-auto: update
    show-sql: 'false'
  http:
    encoding:
      charset: 'UTF-8'
      force: true

  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    cache-names:
      - rate-limit-bucket
      - getPubs
      - getPub
      - getPubsByTerm
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
      caches:
        getPubs:
          spec: maximumSize=100000,expireAfterAccess=3600s,eviction=LRU
bucket4j:
  enabled: true
  filters:
    - id: getRemoteAddr()
      cache-name: rate-limit-bucket
      url: .*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
      - bandwidths:
        - capacity: 50
          refill-capacity: 1
          time: 30
          unit: seconds
          refill-speed: interval
security:
  api-header-name: "X-API-KEY"
  api-key: ${API_KEY:}
  jwt-secret: ${JWT_SECRET:}
  jwt-expiration-ms: ${JWT_EXPIRATION_MS:}
  jwt-refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:}